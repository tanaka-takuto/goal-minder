// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graphql_model

import (
	"goal-minder/adapter/graphql/scalar"
)

// アプリケーションエラー
type ApplicationError interface {
	IsApplicationError()
	// エラーメッセージ
	GetMessage() string
}

// アカウント作成ペイロード
type CreateAccountPayload interface {
	IsCreateAccountPayload()
}

// ログインペイロード
type LoginPayload interface {
	IsLoginPayload()
}

// 目標設定ペイロード
type SetGoaltPayload interface {
	IsSetGoaltPayload()
}

// アカウント
type Account struct {
	// ID
	ID string `json:"id"`
	// 名前
	Name string `json:"name"`
	// メールアドレス
	Email string `json:"email"`
}

func (Account) IsCreateAccountPayload() {}

// 指定されたアカウントが見つかりませんでした
type AccountNotFoundError struct {
	// エラーメッセージ
	Message string `json:"message"`
}

func (AccountNotFoundError) IsApplicationError() {}

// エラーメッセージ
func (this AccountNotFoundError) GetMessage() string { return this.Message }

func (AccountNotFoundError) IsSetGoaltPayload() {}

// アカウント作成インプット
type CreateAccountInput struct {
	// 名前
	Name string `json:"name"`
	// メールアドレス
	Email string `json:"email"`
	// パスワード
	Password string `json:"password"`
}

// 指定されたメールアドレスは既に登録されています
type EmailAlreadyExistsError struct {
	// エラーメッセージ
	Message string `json:"message"`
}

func (EmailAlreadyExistsError) IsApplicationError() {}

// エラーメッセージ
func (this EmailAlreadyExistsError) GetMessage() string { return this.Message }

func (EmailAlreadyExistsError) IsCreateAccountPayload() {}

// 目標
type Goal struct {
	// ID
	ID string `json:"id"`
	// 名前
	Name string `json:"name"`
	// 詳細
	Detail string `json:"detail"`
	// 規模
	Scale *int `json:"scale,omitempty"`
	// 期限
	Deadline *scalar.Date `json:"deadline,omitempty"`
}

func (Goal) IsSetGoaltPayload() {}

// メールアドレスまたはパスワードが間違っています
type IncorrectEmailOrPasswordError struct {
	// エラーメッセージ
	Message string `json:"message"`
}

func (IncorrectEmailOrPasswordError) IsApplicationError() {}

// エラーメッセージ
func (this IncorrectEmailOrPasswordError) GetMessage() string { return this.Message }

func (IncorrectEmailOrPasswordError) IsLoginPayload() {}

// ログインインプット
type LoginInput struct {
	// メールアドレス
	Email string `json:"email"`
	// パスワード
	Password string `json:"password"`
}

// ログイン成功
type LoginSuccess struct {
	// 自分自身
	Me *Me `json:"me"`
}

func (LoginSuccess) IsLoginPayload() {}

// 自分自身
type Me struct {
	// アカウント
	Account *Account `json:"account"`
}

// 目標設定インプット
type SetGoalInput struct {
	// 名前
	Name string `json:"name"`
	// 詳細
	Detail string `json:"detail"`
	// 規模
	Scale *int `json:"scale,omitempty"`
	// 期限
	Deadline *scalar.Date `json:"deadline,omitempty"`
}

// バリデーションエラー
type ValidationError struct {
	// エラーメッセージ
	Message string `json:"message"`
	// バリデーションエラー詳細
	Details []*ValidationErrorDetail `json:"details"`
}

func (ValidationError) IsApplicationError() {}

// エラーメッセージ
func (this ValidationError) GetMessage() string { return this.Message }

func (ValidationError) IsCreateAccountPayload() {}

func (ValidationError) IsLoginPayload() {}

func (ValidationError) IsSetGoaltPayload() {}

// バリデーションエラー詳細
type ValidationErrorDetail struct {
	// フィールド名
	Field string `json:"field"`
	// エラーメッセージ
	Message []string `json:"message"`
}
